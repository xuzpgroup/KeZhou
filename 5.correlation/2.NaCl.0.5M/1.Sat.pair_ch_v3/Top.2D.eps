%!PS-Adobe-2.0 EPSF-2.0
%%Title: Top.2D.eps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Sun May 26 19:44:04 2019
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -83 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
%
% Encoding for ISO-8859-1 (also called Latin1)
%
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Arial reencodeISO def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Top.2D.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (zhou)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun May 26 19:44:04 2019)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Arial) findfont 250 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
LCb setrgbcolor
LTb
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .5 1 ] def
/RedA [1 0 1 ] def
/GreenA [1 0 0 ] def
/BlueA [1 1 0 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
LCb setrgbcolor
1.000 UP
1.000 UL
LTb
LCa setrgbcolor
2059 979 M
5141 4061 L
% Begin plot #1
stroke
LTb
0.58 0.00 0.83 C %%%%BeginImage
gsave 2059 979 N 2059 4061 L 5141 4061 L 5141 979 L Z clip
InterpretLevel1 {
  %% Construct a box instead of image
  LTb
  2058 4342 M
  3364 0 V
  0 -3364 V
  -3364 0 V
  2058 4342 L
  40 -110 R
  (PS level 2 image) Lshow
  % Read data but ignore it
  /imagebuf 50 string def
  currentfile imagebuf readstring
} {
gsave
2058 4342 translate
3364 -3364 scale
%%%%BeginPalette
[ /Indexed
  /DeviceRGB 255
  <
   ffffff fdfdff fbfbff f9f9ff f7f7ff f5f5ff f3f3ff f1f1ff
   efefff ededff ebebff e9e9ff e7e7ff e5e5ff e3e3ff e1e1ff
   dfdfff ddddff dbdbff d9d9ff d7d7ff d5d5ff d3d3ff d1d1ff
   cfcfff cdcdff cbcbff c9c9ff c7c7ff c5c5ff c3c3ff c1c1ff
   bfbfff bdbdff bbbbff b9b9ff b7b7ff b5b5ff b3b3ff b1b1ff
   afafff adadff ababff a9a9ff a7a7ff a5a5ff a3a3ff a1a1ff
   9f9fff 9d9dff 9b9bff 9999ff 9797ff 9595ff 9393ff 9191ff
   8f8fff 8d8dff 8b8bff 8989ff 8787ff 8585ff 8383ff 8181ff
   7f7fff 7d7dff 7b7bff 7979ff 7777ff 7575ff 7373ff 7171ff
   6f6fff 6d6dff 6b6bff 6969ff 6767ff 6565ff 6363ff 6161ff
   5f5fff 5d5dff 5b5bff 5959ff 5757ff 5555ff 5353ff 5151ff
   4f4fff 4d4dff 4b4bff 4949ff 4747ff 4545ff 4343ff 4141ff
   3f3fff 3d3dff 3b3bff 3939ff 3737ff 3535ff 3333ff 3131ff
   2f2fff 2d2dff 2b2bff 2929ff 2727ff 2525ff 2323ff 2121ff
   1f1fff 1d1dff 1b1bff 1919ff 1717ff 1515ff 1313ff 1111ff
   0f0fff 0d0dff 0b0bff 0909ff 0707ff 0505ff 0303ff 0101ff
   0100fe 0300fc 0500fa 0700f8 0900f6 0b00f4 0d00f2 0f00f0
   1100ee 1300ec 1500ea 1700e8 1900e6 1b00e4 1d00e2 1f00e0
   2100de 2300dc 2500da 2700d8 2900d6 2b00d4 2d00d2 2f00d0
   3100ce 3300cc 3500ca 3700c8 3900c6 3b00c4 3d00c2 3f00c0
   4100be 4300bc 4500ba 4700b8 4900b6 4b00b4 4d00b2 4f00b0
   5100ae 5300ac 5500aa 5700a8 5900a6 5b00a4 5d00a2 5f00a0
   61009e 63009c 65009a 670098 690096 6b0094 6d0092 6f0090
   71008e 73008c 75008a 770088 790086 7b0084 7d0082 7f0080
   81007e 83007c 85007a 870078 890076 8b0074 8d0072 8f0070
   91006e 93006c 95006a 970068 990066 9b0064 9d0062 9f0060
   a1005e a3005c a5005a a70058 a90056 ab0054 ad0052 af0050
   b1004e b3004c b5004a b70048 b90046 bb0044 bd0042 bf0040
   c1003e c3003c c5003a c70038 c90036 cb0034 cd0032 cf0030
   d1002e d3002c d5002a d70028 d90026 db0024 dd0022 df0020
   e1001e e3001c e5001a e70018 e90016 eb0014 ed0012 ef0010
   f1000e f3000c f5000a f70008 f90006 fb0004 fd0002 ff0000
  >
] setcolorspace
%%%%EndPalette
<<
  /ImageType 1
  /Width 12
  /Height 12
  /BitsPerComponent 8
  /ImageMatrix [ 12 0 0 12 0 0 ]
  /Decode [ 0 255 ]
  /DataSource currentfile /ASCII85Decode filter
  /MultipleDataSources false
  /Interpolate false
>>
image
} ifelse
zzzzzzzzzzzzzzzzzzzzzzzzzzz!&"<Pzz`fqtRzz!6,!=zz~>
InterpretLevel1 not {
  grestore
} if
grestore
%%%%EndImage
% End plot #1
1.000 UL
LTb
LCb setrgbcolor
2059 4061 N
0 -3082 V
3082 0 V
0 3082 V
-3082 0 V
Z stroke
1.000 UL
LTb
LCa setrgbcolor
2059 979 M
0 3082 V
stroke
LTb
LCb setrgbcolor
2059 979 M
0 89 V
stroke
LTb
LCb setrgbcolor
2059 4061 M
0 -89 V
stroke
2134 622 M
[ [(Arial) 250.0 0.0 true true 0 ( 0)]
] -83.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCa setrgbcolor
2339 979 M
0 3082 V
stroke
LTb
LCb setrgbcolor
2339 979 M
0 45 V
stroke
LTb
LCb setrgbcolor
2339 4061 M
0 -45 V
stroke
LTb
LCa setrgbcolor
2619 979 M
0 3082 V
stroke
LTb
LCb setrgbcolor
2619 979 M
0 89 V
stroke
LTb
LCb setrgbcolor
2619 4061 M
0 -89 V
stroke
2694 622 M
[ [(Arial) 250.0 0.0 true true 0 ( 2)]
] -83.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCa setrgbcolor
2900 979 M
0 3082 V
stroke
LTb
LCb setrgbcolor
2900 979 M
0 45 V
stroke
LTb
LCb setrgbcolor
2900 4061 M
0 -45 V
stroke
LTb
LCa setrgbcolor
3180 979 M
0 3082 V
stroke
LTb
LCb setrgbcolor
3180 979 M
0 89 V
stroke
LTb
LCb setrgbcolor
3180 4061 M
0 -89 V
stroke
3255 622 M
[ [(Arial) 250.0 0.0 true true 0 ( 4)]
] -83.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCa setrgbcolor
3460 979 M
0 3082 V
stroke
LTb
LCb setrgbcolor
3460 979 M
0 45 V
stroke
LTb
LCb setrgbcolor
3460 4061 M
0 -45 V
stroke
LTb
LCa setrgbcolor
3740 979 M
0 3082 V
stroke
LTb
LCb setrgbcolor
3740 979 M
0 89 V
stroke
LTb
LCb setrgbcolor
3740 4061 M
0 -89 V
stroke
3815 622 M
[ [(Arial) 250.0 0.0 true true 0 ( 6)]
] -83.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCa setrgbcolor
4020 979 M
0 3082 V
stroke
LTb
LCb setrgbcolor
4020 979 M
0 45 V
stroke
LTb
LCb setrgbcolor
4020 4061 M
0 -45 V
stroke
LTb
LCa setrgbcolor
4300 979 M
0 3082 V
stroke
LTb
LCb setrgbcolor
4300 979 M
0 89 V
stroke
LTb
LCb setrgbcolor
4300 4061 M
0 -89 V
stroke
4375 622 M
[ [(Arial) 250.0 0.0 true true 0 ( 8)]
] -83.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCa setrgbcolor
4581 979 M
0 3082 V
stroke
LTb
LCb setrgbcolor
4581 979 M
0 45 V
stroke
LTb
LCb setrgbcolor
4581 4061 M
0 -45 V
stroke
LTb
LCa setrgbcolor
4861 979 M
0 3082 V
stroke
LTb
LCb setrgbcolor
4861 979 M
0 89 V
stroke
LTb
LCb setrgbcolor
4861 4061 M
0 -89 V
stroke
4936 622 M
[ [(Arial) 250.0 0.0 true true 0 ( 10)]
] -83.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCa setrgbcolor
5141 979 M
0 3082 V
stroke
LTb
LCb setrgbcolor
5141 979 M
0 45 V
stroke
LTb
LCb setrgbcolor
5141 4061 M
0 -45 V
stroke
LCb setrgbcolor
3600 247 M
[ /Arial-Italic reencodeISO def
[(Arial-Italic) 250.0 0.0 true true 0 (n)]
[(Arial) 200.0 -75.0 true true 0 (+)]
] -58.3 MCshow
LTb
1.000 UL
LTb
LCa setrgbcolor
2059 979 M
3082 0 V
stroke
LTb
LCb setrgbcolor
2059 979 M
89 0 V
stroke
LTb
LCb setrgbcolor
5141 979 M
-89 0 V
stroke
1845 1104 M
[ [(Arial) 250.0 0.0 true true 0 ( 0)]
] -83.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCa setrgbcolor
2059 1259 M
3082 0 V
stroke
LTb
LCb setrgbcolor
2059 1259 M
45 0 V
stroke
LTb
LCb setrgbcolor
5141 1259 M
-45 0 V
stroke
LTb
LCa setrgbcolor
2059 1539 M
3082 0 V
stroke
LTb
LCb setrgbcolor
2059 1539 M
89 0 V
stroke
LTb
LCb setrgbcolor
5141 1539 M
-89 0 V
stroke
1845 1664 M
[ [(Arial) 250.0 0.0 true true 0 ( 2)]
] -83.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCa setrgbcolor
2059 1820 M
3082 0 V
stroke
LTb
LCb setrgbcolor
2059 1820 M
45 0 V
stroke
LTb
LCb setrgbcolor
5141 1820 M
-45 0 V
stroke
LTb
LCa setrgbcolor
2059 2100 M
3082 0 V
stroke
LTb
LCb setrgbcolor
2059 2100 M
89 0 V
stroke
LTb
LCb setrgbcolor
5141 2100 M
-89 0 V
stroke
1845 2225 M
[ [(Arial) 250.0 0.0 true true 0 ( 4)]
] -83.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCa setrgbcolor
2059 2380 M
3082 0 V
stroke
LTb
LCb setrgbcolor
2059 2380 M
45 0 V
stroke
LTb
LCb setrgbcolor
5141 2380 M
-45 0 V
stroke
LTb
LCa setrgbcolor
2059 2660 M
3082 0 V
stroke
LTb
LCb setrgbcolor
2059 2660 M
89 0 V
stroke
LTb
LCb setrgbcolor
5141 2660 M
-89 0 V
stroke
1845 2785 M
[ [(Arial) 250.0 0.0 true true 0 ( 6)]
] -83.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCa setrgbcolor
2059 2940 M
3082 0 V
stroke
LTb
LCb setrgbcolor
2059 2940 M
45 0 V
stroke
LTb
LCb setrgbcolor
5141 2940 M
-45 0 V
stroke
LTb
LCa setrgbcolor
2059 3220 M
3082 0 V
stroke
LTb
LCb setrgbcolor
2059 3220 M
89 0 V
stroke
LTb
LCb setrgbcolor
5141 3220 M
-89 0 V
stroke
1845 3345 M
[ [(Arial) 250.0 0.0 true true 0 ( 8)]
] -83.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCa setrgbcolor
2059 3501 M
3082 0 V
stroke
LTb
LCb setrgbcolor
2059 3501 M
45 0 V
stroke
LTb
LCb setrgbcolor
5141 3501 M
-45 0 V
stroke
LTb
LCa setrgbcolor
2059 3781 M
3082 0 V
stroke
LTb
LCb setrgbcolor
2059 3781 M
89 0 V
stroke
LTb
LCb setrgbcolor
5141 3781 M
-89 0 V
stroke
1845 3906 M
[ [(Arial) 250.0 0.0 true true 0 ( 10)]
] -83.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCa setrgbcolor
2059 4061 M
3082 0 V
stroke
LTb
LCb setrgbcolor
2059 4061 M
45 0 V
stroke
LTb
LCb setrgbcolor
5141 4061 M
-45 0 V
stroke
LCb setrgbcolor
1320 2520 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Arial-Italic) 250.0 0.0 true true 0 (n)]
[(Arial) 200.0 -75.0 true true 0 (-)]
] -58.3 MCshow
grestore
LTb
stroke gsave	%% draw gray scale smooth box
maxcolors 0 gt {/imax maxcolors def} {/imax 1024 def} ifelse
5218 979 translate 155 3082 scale 0 setlinewidth
/ystep 1 imax div def /y0 0 def /ii 0 def
{ y0 g 0 y0 N 1 0 V 0 ystep V -1 0 f
/y0 y0 ystep add def /ii ii 1 add def
ii imax ge {exit} if } loop
grestore 0 setgray
1.000 UL
LTb
LCb setrgbcolor
5218 979 N
155 0 V
0 3082 V
-155 0 V
0 -3082 V
Z stroke
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
5373 979 M
-63 0 V
stroke
5523 979 M
[ [(Arial) 250.0 0.0 true true 0 (10)]
[(Arial) 200.0 125.0 true true 0 (-2)]
] -108.3 MLshow
1.000 UL
LTb
LCb setrgbcolor
5218 979 M
63 0 V
92 770 R
-63 0 V
stroke
5523 1749 M
[ [(Arial) 250.0 0.0 true true 0 (10)]
[(Arial) 200.0 125.0 true true 0 (-1)]
] -108.3 MLshow
1.000 UL
LTb
LCb setrgbcolor
5218 1749 M
63 0 V
92 771 R
-63 0 V
stroke
5523 2520 M
[ [(Arial) 250.0 0.0 true true 0 (1)]
] -83.3 MLshow
1.000 UL
LTb
LCb setrgbcolor
5218 2520 M
63 0 V
92 770 R
-63 0 V
stroke
5523 3290 M
[ [(Arial) 250.0 0.0 true true 0 (10)]
[(Arial) 200.0 125.0 true true 0 (1)]
] -108.3 MLshow
1.000 UL
LTb
LCb setrgbcolor
5218 3290 M
63 0 V
92 771 R
-63 0 V
stroke
5523 4061 M
[ [(Arial) 250.0 0.0 true true 0 (10)]
[(Arial) 200.0 125.0 true true 0 (2)]
] -108.3 MLshow
1.000 UL
LTb
LCb setrgbcolor
5218 4061 M
63 0 V
stroke
LCb setrgbcolor
6048 2520 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Arial-Italic) 250.0 0.0 true true 0 (n)]
[(Arial) 200.0 -75.0 true true 0 (ij)]
] -58.3 MCshow
grestore
LTb
1.000 UP
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Arial-Italic Arial
